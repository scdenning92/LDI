from datetime import*
from dateutil import relativedelta

class Bond(object):
    """ Bond object. 
    Takes either issue datetime, 
                       maturity length (must be 6 month interval after issue) and 
                       coupon (assumes semiannual coupon)
        or takes dict of cashflows: keys are datetimes
    Want to include:
        -Pricing mechanism (when passed a yield curve object)
        -duration calculator (when passed a duration object)"""
    
    def __init__(self, coupon, issue="", maturity=""):
        if type(issue)==datetime.datetime:
            self.__issue_date__ = issue
            diff = relativedelta.relativedelta(issue, maturity)
            if diff.months % 6==0:
                self.__maturity_date__ = maturity
            else:
                print "Issue and maturity must be at 6 month interval"
                return ""
            self.__coupon__ = coupon
            ##need to have code or write a method to generate dict of cashflows for the bond
            
        else:
            self.__coupon = coupon
